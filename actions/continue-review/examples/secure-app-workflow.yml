# Example: GitHub App Authentication Workflow
# This workflow demonstrates the recommended approach using actions/create-github-app-token

name: Continue Review

on:
  pull_request:
    types: [opened, synchronize, ready_for_review]
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review:
    name: AI Code Review
    runs-on: ubuntu-latest
    
    # Only run on PRs or when someone mentions @continue-agent
    if: |
      github.event_name == 'pull_request' || 
      (github.event_name == 'issue_comment' && 
       contains(github.event.comment.body, '@continue-agent'))
    
    steps:
      # Checkout the PR code with full history for better context
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Generate a secure GitHub App installation token
      - name: Generate GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          # App ID stored as a repository/organization variable
          app-id: ${{ vars.CONTINUE_APP_ID }}
          # Private key stored securely as a secret
          private-key: ${{ secrets.CONTINUE_APP_PRIVATE_KEY }}
      
      # Run Continue Review with the App token
      - name: Continue AI Review
        uses: bdougie/contributor.info/actions/continue-review@main
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          continue-api-key: ${{ secrets.CONTINUE_API_KEY }}
          continue-org: 'continuedev'
          continue-config: 'continuedev/review-bot'