[build]
  publish = "dist"
  command = "npm run build"
  
[build.environment]
  NODE_VERSION = "20"
  NPM_VERSION = "10"

# Enable standard Netlify processing
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true


[dev]
  command = "vite --port 5174"
  framework = "#custom"
  targetPort = 5174
  publish = "dist"
  autoLaunch = false
  envFiles = [".env", ".env.local"]

# Deploy contexts
[context.production.environment]
  # Production-specific env vars can go here

[context.deploy-preview.environment]
  # Deploy preview specific env vars
  CONTEXT = "deploy-preview"

[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

[functions.inngest-prod]
  node_bundler = "esbuild"

[functions.inngest]
  node_bundler = "esbuild"

# Specific API routes (these must come first)
[[redirects]]
  from = "/api/health"
  to = "/.netlify/functions/health-check"
  status = 200
  force = true

[[redirects]]
  from = "/api/inngest"
  to = "/.netlify/functions/inngest-prod"
  status = 200
  force = true

[[redirects]]
  from = "/api/hello"
  to = "/.netlify/functions/hello"
  status = 200
  force = true

[[redirects]]
  from = "/api/github/callback"
  to = "/.netlify/functions/github-callback"
  status = 200
  force = true

[[redirects]]
  from = "/api/queue-event"
  to = "/.netlify/functions/api-queue-event"
  status = 200
  force = true

[[redirects]]
  from = "/api/discover-repository"
  to = "/.netlify/functions/api-discover-repository"
  status = 200
  force = true

[[redirects]]
  from = "/api/validate-repository"
  to = "/.netlify/functions/validate-repository"
  status = 200
  force = true

# Manual Backfill API endpoints
[[redirects]]
  from = "/api/backfill/trigger"
  to = "/.netlify/functions/backfill-trigger"
  status = 200
  force = true

[[redirects]]
  from = "/api/backfill/status/*"
  to = "/.netlify/functions/backfill-status"
  status = 200
  force = true

[[redirects]]
  from = "/api/backfill/cancel/*"
  to = "/.netlify/functions/backfill-cancel"
  status = 200
  force = true

[[redirects]]
  from = "/api/backfill/events"
  to = "/.netlify/functions/backfill-events"
  status = 200
  force = true

[[redirects]]
  from = "/api/webhook/backfill-complete"
  to = "/.netlify/functions/webhook-backfill-complete"
  status = 200
  force = true

# Headers for proper MIME types and caching
# Note: Some headers are also in public/_headers, but these are kept for compatibility

# JavaScript MIME types - CRITICAL for ES modules
[[headers]]
  for = "/*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/*.mjs"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/js/*"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"
    X-Content-Type-Options = "nosniff"
    Cache-Control = "public, max-age=31536000, immutable"

# CSS MIME types
[[headers]]
  for = "/*.css"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/css/*"
  [headers.values]
    Content-Type = "text/css; charset=utf-8"
    X-Content-Type-Options = "nosniff"
    Cache-Control = "public, max-age=31536000, immutable"

# Explicit redirect for docs pages to ensure SPA routing works
[[redirects]]
  from = "/docs/*"
  to = "/index.html"
  status = 200
  force = false

# Redirect rules for SPA behavior (exclude functions and API routes)  
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
  conditions = {Path = ["!/.netlify/functions/*", "!/api/*"]}

# Font and image optimizations
[[headers]]
  for = "/*.woff2"
  [headers.values]
    Content-Type = "font/woff2"

# Image caching and optimization headers
[[headers]]
  for = "/*.webp"
  [headers.values]
    Content-Type = "image/webp"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.avif"
  [headers.values]
    Content-Type = "image/avif"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpg"
  [headers.values]
    Content-Type = "image/jpeg"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.jpeg"
  [headers.values]
    Content-Type = "image/jpeg"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.png"
  [headers.values]
    Content-Type = "image/png"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.gif"
  [headers.values]
    Content-Type = "image/gif"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.svg"
  [headers.values]
    Content-Type = "image/svg+xml"
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Resource hints are handled via index.html and build-time injection
# HTTP/2 Server Push removed due to wildcard limitations with hashed filenames

# JavaScript MIME type fix
[[headers]]
  for = "/*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"
    X-Content-Type-Options = "nosniff"

[[headers]]
  for = "/assets/*.js"
  [headers.values]
    Content-Type = "text/javascript; charset=utf-8"
    Cache-Control = "public, max-age=31536000, immutable"
    X-Content-Type-Options = "nosniff"
