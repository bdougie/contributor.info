import { useState } from 'react';
import { ExternalLink, Loader2 } from '@/components/ui/icon';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';

export default function SocialCardPreview() {
  const [repoInput, setRepoInput] = useState('facebook/react');
  const [currentRepo, setCurrentRepo] = useState({ owner: 'facebook', repo: 'react' });
  const [loading, setLoading] = useState({ home: true, repo: true });

  const handlePreview = () => {
    const [owner, repo] = repoInput.split('/');
    if (owner && repo) {
      setLoading((prev) => ({ ...prev, repo: true }));
      setCurrentRepo({ owner, repo });
    }
  };

  const flyServiceUrl = 'https://contributor-info-social-cards.fly.dev';

  return (
    <div className="container mx-auto py-2 max-w-6xl">
      <h1 className="text-3xl font-bold mb-8">Social Card Preview</h1>

      <div className="mb-4 text-sm text-muted-foreground">
        <p>
          Social cards are dynamically generated by our Fly.io service. Click "Open Full Size" to
          view at actual dimensions (1200x630px).
        </p>
        <p className="mt-2">
          Service Status:{' '}
          <a
            href={`${flyServiceUrl}/health`}
            target="_blank"
            rel="noopener noreferrer"
            className="text-blue-500 hover:underline"
          >
            Check Health
          </a>
        </p>
      </div>

      <div className="grid gap-8">
        {/* Controls */}
        <Card>
          <CardHeader>
            <CardTitle>Preview Controls</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="repo">Repository (owner/repo)</Label>
              <div className="flex gap-2">
                <Input
                  id="repo"
                  value={repoInput}
                  onChange={(e) => setRepoInput(e.target.value)}
                  placeholder="e.g., facebook/react"
                />
                <Button onClick={handlePreview}>Preview</Button>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Home Card Preview */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center justify-between">
              Home Card
              <Button variant="outline" size="sm" asChild>
                <a
                  href={`${flyServiceUrl}/social-cards/home`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <ExternalLink className="w-4 h-4 mr-2" />
                  Open Full Size
                </a>
              </Button>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div
              className="relative border rounded-lg overflow-hidden bg-muted/20"
              style={{ height: '315px' }}
            >
              {loading.home && (
                <div className="absolute inset-0 flex items-center justify-center bg-primary-white-overlay z-10">
                  <Loader2 className="w-8 h-8 animate-spin" />
                </div>
              )}
              <img
                src={`${flyServiceUrl}/social-cards/home`}
                alt="Home social card preview"
                onLoad={() => setLoading((prev) => ({ ...prev, home: false }))}
                style={{
                  width: '600px',
                  height: '315px',
                  objectFit: 'contain',
                }}
              />
            </div>
            <div className="mt-4 text-sm text-muted-foreground">
              <p>URL: {flyServiceUrl}/social-cards/home</p>
              <p>Dimensions: 1200x630px</p>
              <p>Format: SVG (optimized for fast loading)</p>
            </div>
          </CardContent>
        </Card>

        {/* Repository Card Preview */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center justify-between">
              Repository Card: {currentRepo.owner}/{currentRepo.repo}
              <Button variant="outline" size="sm" asChild>
                <a
                  href={`${flyServiceUrl}/social-cards/repo?owner=${encodeURIComponent(currentRepo.owner)}&repo=${encodeURIComponent(currentRepo.repo)}`}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <ExternalLink className="w-4 h-4 mr-2" />
                  Open Full Size
                </a>
              </Button>
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div
              className="relative border rounded-lg overflow-hidden bg-muted/20"
              style={{ height: '315px' }}
            >
              {loading.repo && (
                <div className="absolute inset-0 flex items-center justify-center bg-primary-white-overlay z-10">
                  <Loader2 className="w-8 h-8 animate-spin" />
                </div>
              )}
              <img
                key={`${currentRepo.owner}/${currentRepo.repo}`}
                src={`${flyServiceUrl}/social-cards/repo?owner=${encodeURIComponent(currentRepo.owner)}&repo=${encodeURIComponent(currentRepo.repo)}`}
                alt={`${currentRepo.owner}/${currentRepo.repo} social card preview`}
                onLoad={() => setLoading((prev) => ({ ...prev, repo: false }))}
                style={{
                  width: '600px',
                  height: '315px',
                  objectFit: 'contain',
                }}
              />
            </div>
            <div className="mt-4 text-sm text-muted-foreground">
              <p>
                URL: {flyServiceUrl}/social-cards/repo?owner={encodeURIComponent(currentRepo.owner)}
                &repo={encodeURIComponent(currentRepo.repo)}
              </p>
              <p>Dimensions: 1200x630px</p>
              <p>Format: SVG with real-time data from Supabase</p>
            </div>
          </CardContent>
        </Card>

        {/* Meta Tags Example */}
        <Card>
          <CardHeader>
            <CardTitle>Meta Tag Usage</CardTitle>
          </CardHeader>
          <CardContent>
            <pre className="bg-muted p-4 rounded-lg overflow-x-auto text-sm">
              {`<!-- Home page -->
<meta property="og:image" content="${flyServiceUrl}/social-cards/home" />
<meta name="twitter:image" content="${flyServiceUrl}/social-cards/home" />

<!-- Repository page -->
<meta property="og:image" content="${flyServiceUrl}/social-cards/repo?owner=${encodeURIComponent(currentRepo.owner)}&repo=${encodeURIComponent(currentRepo.repo)}" />
<meta name="twitter:image" content="${flyServiceUrl}/social-cards/repo?owner=${encodeURIComponent(currentRepo.owner)}&repo=${encodeURIComponent(currentRepo.repo)}" />`}
            </pre>
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
