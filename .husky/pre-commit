#!/bin/sh

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

# Check if any staged files are TypeScript files
if echo "$STAGED_FILES" | grep -qE '\.(ts|tsx)$'; then
  echo "üîç Running TypeScript type check on staged files..."

  # Run full type check (needed because TypeScript needs to check dependencies)
  # But only if TypeScript files were changed
  npx tsc -b --noEmit
  if [ $? -ne 0 ]; then
    echo "‚ùå TypeScript type check failed. Please fix type errors before committing."
    exit 1
  fi
  echo "‚úÖ TypeScript check passed"
fi

# Check if any staged files are in supabase/functions
if echo "$STAGED_FILES" | grep -qE '^supabase/functions/.*\.ts$'; then
  echo "üîç Running Deno type check on edge functions..."

  # Check if deno is installed
  if ! command -v deno &> /dev/null; then
    echo "‚ö†Ô∏è  Deno not found. Skipping edge function type check."
    echo "   Install Deno to enable pre-commit checks: https://deno.land/manual/getting_started/installation"
  else
    # Get list of staged .ts files in supabase/functions
    STAGED_EDGE_FUNCTIONS=$(echo "$STAGED_FILES" | grep -E '^supabase/functions/.*\.ts$' | tr '\n' ' ')

    if [ -n "$STAGED_EDGE_FUNCTIONS" ]; then
      # Run Deno type check only on staged files
      cd supabase/functions
      RELATIVE_FILES=$(echo "$STAGED_EDGE_FUNCTIONS" | sed 's|supabase/functions/||g')
      deno check $RELATIVE_FILES 2>&1
      RESULT=$?
      cd ../..

      if [ $RESULT -ne 0 ]; then
        echo "‚ùå Deno type check failed. Please fix type errors in edge functions before committing."
        exit 1
      fi
      echo "‚úÖ Deno type check passed"
    fi
  fi
fi

# Run lint-staged for linting and formatting
npx lint-staged
