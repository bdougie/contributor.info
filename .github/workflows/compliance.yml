name: PR Compliance Checks

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  conventional-commits:
    name: Validate Conventional Commits
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate conventional commits
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: .commitlintrc.json

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type checking
        run: npm run build

      - name: Run tests
        run: npm test -- --coverage --passWithNoTests

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    permissions:
      security-events: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  bundle-size:
    name: Bundle Size Impact
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Analyze bundle size
        uses: preactjs/compressed-size-action@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pattern: "./dist/**/*.{js,css}"
          exclude: "{**/*.map,**/node_modules/**}"

  file-validation:
    name: Required Files Check
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check required files
        run: |
          required_files=(
            "package.json"
            "README.md"
            "LICENSE"
            ".gitignore"
            "tsconfig.json"
          )
          
          missing_files=()
          for file in "${required_files[@]}"; do
            if [[ ! -f "$file" ]]; then
              missing_files+=("$file")
            fi
          done
          
          if [[ ${#missing_files[@]} -gt 0 ]]; then
            echo "❌ Missing required files:"
            printf '%s\n' "${missing_files[@]}"
            exit 1
          else
            echo "✅ All required files present"
          fi

  pr-labels:
    name: PR Label Management
    runs-on: ubuntu-latest
    if: ${{ !github.event.pull_request.draft }}
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Auto-label PR based on changes
        uses: actions/labeler@v5
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          configuration-path: .github/pr-labeler.yml

  compliance-summary:
    name: Compliance Summary
    runs-on: ubuntu-latest
    needs: [conventional-commits, code-quality, security-audit, bundle-size, file-validation, pr-labels]
    if: always() && !github.event.pull_request.draft
    steps:
      - name: Check compliance status
        run: |
          echo "## 🔍 Compliance Check Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.conventional-commits.result }}" == "success" ]]; then
            echo "✅ Conventional Commits: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Conventional Commits: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.code-quality.result }}" == "success" ]]; then
            echo "✅ Code Quality: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Code Quality: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.security-audit.result }}" == "success" ]]; then
            echo "✅ Security Audit: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Security Audit: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.bundle-size.result }}" == "success" ]]; then
            echo "✅ Bundle Size: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Bundle Size: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.file-validation.result }}" == "success" ]]; then
            echo "✅ File Validation: PASSED" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ File Validation: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📊 **Overall Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY