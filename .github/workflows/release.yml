name: Release Automation

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release'
        required: true
        default: 'auto'
        type: choice
        options:
          - auto
          - patch
          - minor
          - major

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Build step removed - Netlify will handle the build with proper env vars
      
      - name: Update tracked repositories list
        run: |
          echo "📊 Updating tracked repositories list..."
          node scripts/update-tracked-repos.js
          
          # Check if files changed
          if git diff --quiet tracked-repositories.txt tracked-repositories.json tracked-repositories-stats.json 2>/dev/null; then
            echo "✅ No changes to tracked repositories"
          else
            echo "📝 Tracked repositories list updated"
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add tracked-repositories.txt tracked-repositories.json tracked-repositories-stats.json 2>/dev/null || true
            git commit -m "chore: update tracked repositories list [skip ci]" || echo "No changes to commit"
            git push origin HEAD || echo "Push failed, possibly due to no changes"
          fi
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Run tests
        run: npm test -- --passWithNoTests

      - name: Prepare changelog for public directory
        run: |
          mkdir -p public
          if [ -f CHANGELOG.md ]; then
            cp CHANGELOG.md public/CHANGELOG.md
          fi

      - name: Create release trigger commit
        if: github.event.inputs.release_type != 'auto'
        run: |
          echo "Manual release type: ${{ github.event.inputs.release_type }}"
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Create an empty commit with the appropriate message
          if [ "${{ github.event.inputs.release_type }}" = "major" ]; then
            git commit --allow-empty -m "feat!: Manual major release trigger

BREAKING CHANGE: Manually triggered major version bump via GitHub Actions workflow dispatch."
          elif [ "${{ github.event.inputs.release_type }}" = "minor" ]; then
            git commit --allow-empty -m "feat: Manual minor release trigger via workflow dispatch"
          elif [ "${{ github.event.inputs.release_type }}" = "patch" ]; then
            git commit --allow-empty -m "fix: Manual patch release trigger via workflow dispatch"
          fi

      - name: Create Release
        id: release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 22.0.12
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            conventional-changelog-conventionalcommits@7.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Netlify will automatically deploy from main branch via GitHub integration
      # No manual deployment needed here

      - name: Update public changelog after release  
        if: steps.release.outputs.released == 'true'
        run: |
          mkdir -p public
          cp CHANGELOG.md public/CHANGELOG.md
          
          # Generate RSS/Atom feeds from changelog
          if [ -f scripts/changelog/generate-rss.js ]; then
            node scripts/changelog/generate-rss.js
          fi
          
          # Configure git with proper credentials
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add and commit changes
          git add public/CHANGELOG.md public/changelog-rss.xml public/changelog-atom.xml 2>/dev/null || true
          git commit -m "chore: update public changelog and feeds after release ${{ steps.release.outputs.version }}" || echo "No changes to commit"
          
          # Push with the GitHub token using authenticated URL
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:main || echo "Push failed, possibly due to no changes"
          
  verify-sitemap:
    name: Verify Sitemap Accessibility
    runs-on: ubuntu-latest
    needs: [release]
    if: needs.release.outputs.released == 'true'
    steps:
      - name: Wait for Netlify deployment
        run: |
          echo "Waiting 2 minutes for Netlify deployment to complete..."
          sleep 120
          
      - name: Verify sitemaps are accessible
        run: |
          echo "Verifying sitemap accessibility..."
          
          # Check main sitemap
          if curl -f -s https://contributor.info/sitemap.xml > /dev/null; then
            echo "✅ Main sitemap is accessible"
          else
            echo "❌ Main sitemap is NOT accessible"
            exit 1
          fi
          
          # Check news sitemap
          if curl -f -s https://contributor.info/sitemap-news.xml > /dev/null; then
            echo "✅ News sitemap is accessible"
          else
            echo "❌ News sitemap is NOT accessible"
            exit 1
          fi
          
          echo ""
          echo "✅ Sitemaps verified! Automatic submission will be triggered."
          echo ""
          echo "📤 The 'Submit Sitemap to Search Engines' workflow will automatically:"
          echo "- Submit sitemaps to Google"
          echo "- Submit sitemaps to Bing"
          echo "- Attempt IndexNow submission (if configured)"
          echo ""
          echo "✨ Sitemaps are also referenced in robots.txt for automatic discovery"

  notify:
    name: Release Notification
    runs-on: ubuntu-latest
    needs: [release, verify-sitemap]
    if: needs.release.outputs.released == 'true'
    steps:
      - name: Create release summary
        run: |
          echo "## 🚀 Release ${{ needs.release.outputs.version }} Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Release Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ needs.release.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ needs.release.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment**: Netlify will auto-deploy from main branch" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Release Notes](https://github.com/${{ github.repository }}/releases/tag/${{ needs.release.outputs.tag }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Live Site](https://contributor.info)" >> $GITHUB_STEP_SUMMARY
          echo "- [Sitemap](https://contributor.info/sitemap.xml)" >> $GITHUB_STEP_SUMMARY
