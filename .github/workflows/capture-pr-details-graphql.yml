name: Capture PR Details (GraphQL)

on:
  workflow_dispatch:
    inputs:
      repository_id:
        description: 'Repository ID'
        required: true
        type: string
      repository_name:
        description: 'Repository name (owner/name)'
        required: true
        type: string
      pr_numbers:
        description: 'Comma-separated PR numbers to capture'
        required: true
        type: string
      job_id:
        description: 'Progressive capture job ID'
        required: false
        type: string

env:
  NODE_VERSION: '20'

jobs:
  capture:
    name: Capture PR Details
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Capture PR details
        id: capture
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          REPOSITORY_ID: ${{ inputs.repository_id }}
          REPOSITORY_NAME: ${{ inputs.repository_name }}
          PR_NUMBERS: ${{ inputs.pr_numbers }}
          JOB_ID: ${{ inputs.job_id }}
        run: |
          node scripts/github-actions/capture-pr-details-graphql.js \
            --repository-id="$REPOSITORY_ID" \
            --repository-name="$REPOSITORY_NAME" \
            --pr-numbers="$PR_NUMBERS" \
            ${JOB_ID:+--job-id="$JOB_ID"}
            
      - name: Update job status on success
        if: success() && inputs.job_id
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          SUPABASE_SERVICE_KEY: ${{ secrets.SUPABASE_SERVICE_KEY }}
          JOB_ID: ${{ inputs.job_id }}
        run: |
          node -e "
          const { createClient } = require('@supabase/supabase-js');
          const supabase = createClient(
            process.env.VITE_SUPABASE_URL,
            process.env.SUPABASE_SERVICE_KEY
          );
          
          (async () => {
            await supabase
              .from('progressive_capture_jobs')
              .update({
                status: 'completed',
                completed_at: new Date().toISOString(),
                metadata: {
                  workflow_run_id: '${{ github.run_id }}',
                  workflow_run_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
                }
              })
              .eq('id', process.env.JOB_ID);
          })();
          "
          
      - name: Report failure to GitHub Issues
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get error from previous step
          ERROR_MESSAGE="${{ steps.capture.outcome == 'failure' && 'PR details capture failed' || 'Unknown error' }}"
          
          node scripts/github-actions/report-failure.js \
            --job-type="capture_pr_details" \
            --repository-name="${{ inputs.repository_name }}" \
            --workflow-name="${{ github.workflow }}" \
            --workflow-url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            --error-message="$ERROR_MESSAGE"