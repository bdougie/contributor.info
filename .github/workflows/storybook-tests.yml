name: Storybook Interaction Tests
# TEST RUNNER ISSUE: @storybook/test-runner v0.23.0 has a known bug where the --url parameter
# is not properly recognized, causing the command to display Jest help instead of running tests.
#
# TEMPORARY WORKAROUND: Test jobs are disabled with `if: false` until we can either:
# 1. Upgrade to a newer version of @storybook/test-runner that fixes this issue
# 2. Find an alternative configuration that works with the current version
# 3. Implement a custom test runner solution
#
# IMPACT: This does not affect the build or deployment process. Visual regression testing
# is still handled by Chromatic, and unit tests run separately.

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  check-visual:
    uses: ./.github/workflows/check-visual-changes.yml

  build-storybook:
    runs-on: ubuntu-latest
    needs: check-visual
    # Re-enabled with dynamic port allocation
    if: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Cache Storybook build
      uses: actions/cache@v4
      id: storybook-cache
      with:
        path: storybook-static
        key: storybook-${{ runner.os }}-${{ hashFiles('**/*.stories.*', '.storybook/**/*', 'src/**/*.tsx', 'src/**/*.ts', 'package-lock.json') }}
        
    - name: Build Storybook
      if: steps.storybook-cache.outputs.cache-hit != 'true'
      run: npm run build-storybook --quiet
      env:
        VITE_SUPABASE_URL: http://localhost:54321
        VITE_SUPABASE_ANON_KEY: mock-anon-key
        
    - name: Upload Storybook build
      uses: actions/upload-artifact@v4
      with:
        name: storybook-static
        path: storybook-static/
        retention-days: 1

  interaction-tests:
    runs-on: ubuntu-latest
    needs: build-storybook
    # Re-enabled with improved test runner configuration
    if: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download Storybook build
      uses: actions/download-artifact@v4
      with:
        name: storybook-static
        path: storybook-static
      
    - name: Get Playwright version
      id: playwright-version
      run: echo "version=$(npx playwright --version | sed 's/Version //')" >> $GITHUB_OUTPUT
      
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: playwright-browsers-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}
        
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      
    - name: Install Playwright system dependencies
      run: npx playwright install-deps
      if: steps.playwright-cache.outputs.cache-hit == 'true'
      
    - name: Find available port
      id: port
      run: |
        # Find an available port starting from 6006
        PORT=6006
        while lsof -i:$PORT > /dev/null 2>&1; do
          echo "Port $PORT is in use, trying next..."
          PORT=$((PORT + 1))
        done
        echo "port=$PORT" >> $GITHUB_OUTPUT
        echo "Using port $PORT for Storybook server"
      
    - name: Start Storybook server
      run: |
        npx http-server storybook-static --port ${{ steps.port.outputs.port }} --silent &
        echo $! > storybook.pid
        npx wait-on tcp:${{ steps.port.outputs.port }} --timeout 30000
        
    - name: Run Storybook interaction tests
      run: |
        cd ${{ github.workspace }}
        npx test-storybook --url http://127.0.0.1:${{ steps.port.outputs.port }}
        
    - name: Stop Storybook server
      if: always()
      run: |
        if [ -f storybook.pid ]; then
          kill $(cat storybook.pid) || true
          rm storybook.pid
        fi
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: storybook-test-results
        path: |
          test-results/
          storybook-static/
        retention-days: 30

  accessibility-tests:
    runs-on: ubuntu-latest
    needs: build-storybook
    # Re-enabled with improved test runner configuration
    if: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Download Storybook build
      uses: actions/download-artifact@v4
      with:
        name: storybook-static
        path: storybook-static
      
    - name: Get Playwright version
      id: playwright-version-a11y
      run: echo "version=$(npx playwright --version | sed 's/Version //')" >> $GITHUB_OUTPUT
      
    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache-a11y
      with:
        path: ~/.cache/ms-playwright
        key: playwright-browsers-${{ runner.os }}-${{ steps.playwright-version-a11y.outputs.version }}
        
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
      if: steps.playwright-cache-a11y.outputs.cache-hit != 'true'
      
    - name: Install Playwright system dependencies
      run: npx playwright install-deps
      if: steps.playwright-cache-a11y.outputs.cache-hit == 'true'
      
    - name: Find available port for a11y
      id: port-a11y
      run: |
        # Find an available port starting from 6007
        PORT=6007
        while lsof -i:$PORT > /dev/null 2>&1; do
          echo "Port $PORT is in use, trying next..."
          PORT=$((PORT + 1))
        done
        echo "port=$PORT" >> $GITHUB_OUTPUT
        echo "Using port $PORT for accessibility tests"
      
    - name: Start Storybook server
      run: |
        npx http-server storybook-static --port ${{ steps.port-a11y.outputs.port }} --silent &
        echo $! > storybook-a11y.pid
        npx wait-on tcp:${{ steps.port-a11y.outputs.port }} --timeout 30000
        
    - name: Run accessibility tests via test-runner
      run: |
        cd ${{ github.workspace }}
        npx test-storybook --url http://127.0.0.1:${{ steps.port-a11y.outputs.port }} --includeTags accessibility
        
    - name: Stop Storybook server
      if: always()
      run: |
        if [ -f storybook-a11y.pid ]; then
          kill $(cat storybook-a11y.pid) || true
          rm storybook-a11y.pid
        fi
        
    - name: Upload accessibility results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: accessibility-test-results
        path: |
          test-results/
          storybook-static/
        retention-days: 30
