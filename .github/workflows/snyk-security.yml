name: Security Scanning with Snyk MCP

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  schedule:
    - cron: '0 8 * * *' # Daily at 8 AM UTC

jobs:
  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for git diff

      - name: Get Changed Files
        id: changed-files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "üìù Getting changed files since main branch..."
            CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | tr '\n' ' ')
            echo "changed_files=$CHANGED_FILES" >> $GITHUB_OUTPUT
            echo "is_pr=true" >> $GITHUB_OUTPUT
            echo "Changed files: $CHANGED_FILES"
          else
            echo "is_pr=false" >> $GITHUB_OUTPUT
            echo "Full repository scan (not a PR)"
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Continue CLI
        run: |
          npm install -g @continuedev/cli
          echo "‚úÖ Continue CLI installed"

      - name: Validate Secrets
        run: |
          if [ -z "${{ secrets.CONTINUE_API_KEY }}" ]; then
            echo "‚ùå Error: CONTINUE_API_KEY secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SNYK_TOKEN }}" ]; then
            echo "‚ùå Error: SNYK_TOKEN secret is not set"
            exit 1
          fi
          echo "‚úÖ Required secrets are configured"

      - name: Run Security Scans
        env:
          CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.changed_files }}
          IS_PR: ${{ steps.changed-files.outputs.is_pr }}
        run: |
          set -e  # Exit on any error

          if [ "$IS_PR" = "true" ]; then
            SCAN_SCOPE="Focus only on these changed files: $CHANGED_FILES"
            echo "üîç Running targeted scan on changed files..."
          else
            SCAN_SCOPE="Scan the entire repository"
            echo "üîç Running full repository scan..."
          fi

          echo "üîç Running code vulnerability scan..."
          if ! cn -p "Use snyk mcp to run Snyk Code scan with severity high. $SCAN_SCOPE. Fail if any high issues are present. Do not check authentication - snyk is already authenticated." --auto; then
            echo "‚ùå Error: Snyk Code scan failed or found high severity issues"
            exit 1
          fi
          echo "‚úÖ Code vulnerability scan completed"

          echo "üì¶ Checking dependencies..."
          if ! cn -p "Use snyk mcp to run Snyk Open Source scan. $SCAN_SCOPE. Fail on fixable high issues. Do not check authentication - snyk is already authenticated." --auto; then
            echo "‚ùå Error: Snyk Open Source scan failed or found fixable high severity issues"
            exit 1
          fi
          echo "‚úÖ Dependency scan completed"

      - name: Generate Security Report
        if: always()
        continue-on-error: true
        env:
          CONTINUE_API_KEY: ${{ secrets.CONTINUE_API_KEY }}
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          echo "üìä Generating security report..."
          cn -p "Generate a markdown security report summarizing total vulnerabilities by severity, top 3 critical issues if any, and recommended next steps. Save the report to scan-results.md file." --auto || {
            echo "‚ö†Ô∏è Warning: Could not generate security report via Continue CLI"
            echo "Manual review of security scan results recommended"
            exit 0
          }

          if [ -f scan-results.md ]; then
            echo "‚úÖ Security report generated successfully"
          else
            echo "‚ö†Ô∏è Warning: scan-results.md was not created"
          fi

      - name: Upload Security Report
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: scan-results.md
          if-no-files-found: warn
