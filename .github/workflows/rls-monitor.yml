name: RLS Performance Monitor

on:
  schedule:
    # Run weekly on Mondays at 3 AM UTC
    - cron: '0 3 * * 1'
  pull_request:
    paths:
      - 'supabase/migrations/**'
      - 'supabase/**/*.sql'
  workflow_dispatch:  # Allow manual trigger

jobs:
  check-rls-policies:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Check for unoptimized RLS patterns
        run: |
          echo "Checking for unoptimized RLS patterns in new/modified files..."

          # Only check files that are being added or modified in this PR
          # We exclude checking existing migrations since they may contain patterns being fixed
          for file in $(git diff --name-only origin/main...HEAD -- 'supabase/migrations/*.sql' 2>/dev/null || echo ""); do
            if [ -f "$file" ]; then
              echo "Checking $file..."

              # Skip monitoring and template files
              if echo "$file" | grep -E "(monitoring|template)" > /dev/null; then
                echo "  Skipping monitoring/template file"
                continue
              fi

              # Extract only CREATE POLICY statements (not DO blocks or comments)
              # Check for auth functions without SELECT wrapper in actual policy definitions
              if sed -n '/CREATE POLICY/,/;/p' "$file" 2>/dev/null | grep -E "auth\.(uid|role|jwt)\(\)" | grep -v "(SELECT auth\." | grep -v "( SELECT auth\." > /dev/null 2>&1; then
                echo "❌ Found unoptimized auth function calls in policy definitions in $file"
                echo "Fix by wrapping with: (SELECT auth.function())"
                sed -n '/CREATE POLICY/,/;/p' "$file" | grep -n -E "auth\.(uid|role|jwt)\(\)" | grep -v "SELECT auth\." | head -5
                exit 1
              fi
            fi
          done

          echo "✅ No unoptimized auth patterns found in new/modified files"

      - name: Validate RLS policy structure
        run: |
          echo "Validating RLS policy structure..."

          # Check for multiple permissive policies pattern
          for file in supabase/migrations/*.sql; do
            if [ -f "$file" ]; then
              table_policies=$(grep -E "CREATE POLICY.*ON.*FOR (SELECT|INSERT|UPDATE|DELETE)" "$file" | awk '{print $5, $7, $9}' | sort | uniq -c | awk '$1 > 1')
              if [ ! -z "$table_policies" ]; then
                echo "⚠️ Warning: Multiple policies detected for same action on tables"
                echo "$table_policies"
              fi
            fi
          done

          echo "✅ RLS policy structure validated"

      - name: Check Supabase Linter (Production)
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          if [ -z "$SUPABASE_ACCESS_TOKEN" ] || [ -z "$SUPABASE_PROJECT_ID" ]; then
            echo "⚠️ Supabase credentials not configured, skipping linter check"
            exit 0
          fi

          echo "Running Supabase Database Linter..."

          # Use Supabase Management API to get linter results
          response=$(curl -s -X GET \
            "https://api.supabase.com/v1/projects/$SUPABASE_PROJECT_ID/database/lint" \
            -H "Authorization: Bearer $SUPABASE_ACCESS_TOKEN" \
            -H "Content-Type: application/json")

          # Check for auth_rls_initplan warnings
          auth_warnings=$(echo "$response" | grep -c "auth_rls_initplan" || true)
          if [ "$auth_warnings" -gt 0 ]; then
            echo "❌ Found $auth_warnings auth_rls_initplan warnings"
            echo "$response" | grep -A 5 "auth_rls_initplan"
            exit 1
          fi

          # Check for multiple_permissive_policies warnings
          policy_warnings=$(echo "$response" | grep -c "multiple_permissive_policies" || true)
          if [ "$policy_warnings" -gt 0 ]; then
            echo "⚠️ Found $policy_warnings multiple_permissive_policies warnings"
            echo "$response" | grep -A 5 "multiple_permissive_policies"
          fi

          echo "✅ Database linter check complete"

      - name: Generate Performance Report
        if: github.event_name == 'schedule'
        run: |
          echo "## 📊 Weekly RLS Performance Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Scan Date: $(date -u '+%Y-%m-%d %H:%M UTC')" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ✅ All RLS policies optimized" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- Review any new migrations for RLS patterns" >> $GITHUB_STEP_SUMMARY
          echo "- Check Supabase Dashboard for query performance metrics" >> $GITHUB_STEP_SUMMARY